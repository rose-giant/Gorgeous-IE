Index: src/main/java/mizdooni/Restourant.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package mizdooni;\r\n\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\n\r\nimport java.util.Date;\r\nimport java.util.Objects;\r\n\r\npublic class Restourant {\r\n    public String name;\r\n    public String managerUsername;\r\n    public String type;\r\n    public String startTime;\r\n    public String endTime;\r\n    public Date parsedStartTime;\r\n    public Date parsedEndTIme;\r\n    public String description;\r\n    public Address address = new Address();\r\n    public ResponseHandler responseHandler;\r\n\r\n    public boolean isRestaurantNameValid(String name) {\r\n        if (name.isEmpty()) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public boolean isAddressValid(Address address) {\r\n        boolean isCityValid = address.isCityValid(address.city);\r\n        boolean isCountryValid = address.isCountryValid(address.country);\r\n        boolean isStreetValid = address.isStreetValid(address.street);\r\n        return isCountryValid && isCityValid && isStreetValid;\r\n    }\r\n\r\n    public Date parseDate(String dateString) {\r\n        Date date = new Date();\r\n        if (dateString == null) {\r\n            return date;\r\n        }\r\n        String[] timeString = dateString.split(\":\");\r\n        date.setHours(Integer.parseInt(timeString[0]));\r\n        date.setMinutes(Integer.parseInt(timeString[1]));\r\n        return date;\r\n    }\r\n\r\n    public boolean isTimeValid(Date date) {\r\n        int minutes = date.getMinutes();\r\n        return minutes == 0;\r\n    }\r\n\r\n    public boolean isManagerUsernameValid(String managerUsername) {\r\n        User user = new User();\r\n        return user.isUsernameValid(managerUsername);\r\n    }\r\n\r\n    public boolean isDescriptionValid(String description) {\r\n        return !description.isEmpty();\r\n    }\r\n\r\n    public boolean isTypeValid(String type) {\r\n        return !type.isEmpty();\r\n    }\r\n\r\n    public void handleNoneExistingUsername() {\r\n        if (this.responseHandler.responseStatus) {\r\n            this.responseHandler.responseBody = \" manager username does not exist.\";\r\n        } else {\r\n            this.responseHandler.responseBody += \" manager username does not exist.\";\r\n        }\r\n\r\n        this.responseHandler.responseStatus = false;\r\n    }\r\n\r\n    public void handleIncorrectManagerRole() {\r\n        if (this.responseHandler.responseStatus) {\r\n            this.responseHandler.responseBody = \" manager role is not correct.\";\r\n        } else {\r\n            this.responseHandler.responseBody += \" manager role is not correct.\";\r\n        }\r\n\r\n        this.responseHandler.responseStatus = false;\r\n    }\r\n\r\n    public void handleRepeatedRestaurantName() {\r\n        if (this.responseHandler.responseStatus) {\r\n            this.responseHandler.responseBody = \" restaurant name is repeated.\";\r\n        } else {\r\n            this.responseHandler.responseBody += \" restaurant name is repeated.\";\r\n        }\r\n\r\n        this.responseHandler.responseStatus = false;\r\n    }\r\n\r\n    public void addRestaurantResponseGenerator() {\r\n        this.responseHandler = new ResponseHandler();\r\n        this.responseHandler.responseBody = \"\";\r\n        boolean isRestaurantNameValid = isRestaurantNameValid(this.name);\r\n        if (!isRestaurantNameValid) {\r\n            this.responseHandler.responseBody += \" name is not valid.\";\r\n        }\r\n\r\n        boolean isManagerUsernameValid = isManagerUsernameValid(this.managerUsername);\r\n        if (!isManagerUsernameValid) {\r\n            this.responseHandler.responseBody += \" manager username is not valid.\";\r\n        }\r\n\r\n        boolean isDescriptionValid = isDescriptionValid(this.description);\r\n        if (!isDescriptionValid) {\r\n            this.responseHandler.responseBody += \" description is not valid.\";\r\n        }\r\n\r\n        boolean isTypeValid = isTypeValid(this.type);\r\n        if (!isTypeValid) {\r\n            this.responseHandler.responseBody += \" type is not valid.\";\r\n        }\r\n\r\n        boolean isAddressValid = isAddressValid(this.address);\r\n        if (!isAddressValid) {\r\n            this.responseHandler.responseBody += \" address is not valid.\";\r\n        }\r\n\r\n        this.parsedStartTime = parseDate(this.startTime);\r\n        boolean isStartTimeValid = isTimeValid(this.parsedStartTime);\r\n        if (!isStartTimeValid) {\r\n            this.responseHandler.responseBody += \" start time is not rond.\";\r\n        }\r\n\r\n        this.parsedEndTIme = parseDate(this.endTime);\r\n        boolean isEndTimeValid = isTimeValid(this.parsedEndTIme);\r\n        if (!isEndTimeValid) {\r\n            this.responseHandler.responseBody += \" end time is not rond.\";\r\n        }\r\n\r\n        this.responseHandler.responseStatus = isTypeValid && isDescriptionValid && isManagerUsernameValid &&\r\n                isRestaurantNameValid && isAddressValid && isStartTimeValid && isEndTimeValid;\r\n        if (this.responseHandler.responseStatus) {\r\n            this.responseHandler.responseBody = \"Restaurant added successfully.\";\r\n        }\r\n    }\r\n    public void addRestaurantHandler(String jsonString) throws JsonProcessingException {\r\n        //Restourant restourant = new Restourant();\r\n        Restourant restourant = unmarshlIntoRestaurant(jsonString);\r\n        this.managerUsername = restourant.managerUsername;\r\n        this.name = restourant.name;\r\n        this.type = restourant.type;\r\n        this.startTime = restourant.startTime;\r\n        this.parsedStartTime = restourant.parsedStartTime;\r\n        this.endTime = restourant.endTime;\r\n        this.parsedEndTIme = restourant.parsedEndTIme;\r\n        this.address = restourant.address;\r\n        this.description = restourant.description;\r\n        addRestaurantResponseGenerator();\r\n    }\r\n\r\n    public String marshalRestaurant(Restourant restourant) throws JsonProcessingException {\r\n        ObjectMapper objectMapper = new ObjectMapper();\r\n        String jsonStr = objectMapper.writeValueAsString(restourant);\r\n        return jsonStr;\r\n    }\r\n\r\n    public Restourant unmarshlIntoRestaurant(String jsonString) throws JsonProcessingException {\r\n        ObjectMapper om = new ObjectMapper();\r\n        Restourant restourant  = om.readValue(jsonString, Restourant.class);\r\n        return restourant;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/mizdooni/Restourant.java b/src/main/java/mizdooni/Restourant.java
--- a/src/main/java/mizdooni/Restourant.java	(revision 4105f00a4252f4d583717b1240a241f93801fa6f)
+++ b/src/main/java/mizdooni/Restourant.java	(date 1708898521387)
@@ -3,6 +3,8 @@
 import com.fasterxml.jackson.core.JsonProcessingException;
 import com.fasterxml.jackson.databind.ObjectMapper;
 
+import java.time.LocalDateTime;
+import java.time.LocalTime;
 import java.util.Date;
 import java.util.Objects;
 
@@ -164,4 +166,14 @@
         Restourant restourant  = om.readValue(jsonString, Restourant.class);
         return restourant;
     }
+
+    public boolean isWorkingAt(String datetime) {
+        datetime.replace(' ', 't');
+        LocalDateTime reserveDateTime = LocalDateTime.parse(datetime).toLocalTime();
+        LocalTime startT = LocalTime.parse(this.startTime);
+        LocalTime endT = LocalTime.parse(this.endTime);
+        if(startT.isBefore()){
+            return true;
+        }else return false;
+    }
 }
Index: src/main/java/mizdooni/CommandHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package mizdooni;\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\nimport java.util.Scanner;\r\n\r\npublic class CommandHandler {\r\n    public String command;\r\n    public String jsonString;\r\n    public ResponseHandler responseHandler = new ResponseHandler();\r\n    public ArrayList<User> users = new ArrayList<>();\r\n    public ArrayList<Restourant> restaurants = new ArrayList<>();\r\n    public ArrayList<Table> tables = new ArrayList<>();\r\n    public ArrayList<Reservation> reservations = new ArrayList<>();\r\n\r\n    public void parseCommand(String userInput) {\r\n       this.jsonString = \"\";\r\n       String[] splittedInput = userInput.split(\" \");\r\n       this.command = splittedInput[0];\r\n\r\n       for (int i = 1 ; i < splittedInput.length ; i++) {\r\n           this.jsonString += splittedInput[i];\r\n\r\n           if (i < splittedInput.length - 1) {\r\n               this.jsonString += \" \";\r\n           }\r\n       }\r\n    }\r\n\r\n    public boolean userAlreadyExists(User user) {\r\n        for(User value: users) {\r\n            if (Objects.equals(user.username, value.username) || Objects.equals(user.email, value.email)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public boolean restaurantManagerUsernameExists(String managerUsername) {\r\n        boolean exists = false;\r\n        for(User value: users) {\r\n            if (Objects.equals(managerUsername, value.username)) {\r\n                exists = true;\r\n                break;\r\n            }\r\n        }\r\n        return exists;\r\n    }\r\n\r\n    public boolean restaurantManagerRoleIsCorrect(String managerUsername) {\r\n        boolean isCorrect = false;\r\n        for(User value: users) {\r\n            if (Objects.equals(managerUsername, value.username)) {\r\n                if (Objects.equals(value.role, \"manager\")) {\r\n                    isCorrect = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return isCorrect;\r\n    }\r\n\r\n    public boolean restaurantNameAlreadyExists(String restaurantName) {\r\n        boolean alreadyExists = false;\r\n        for(Restourant value: restaurants) {\r\n            if(Objects.equals(value.name, restaurantName)) {\r\n                alreadyExists = true;\r\n                break;\r\n            }\r\n        }\r\n        return alreadyExists;\r\n    }\r\n\r\n    public Restourant findRestaurantByName(String restaurantName) {\r\n        for(Restourant rest: restaurants) {\r\n            if(Objects.equals(rest.name, restaurantName)) {\r\n                return rest;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public Table findTableByRestaurantNameAndTableNumber(String restaurantName, String tableNumber) {\r\n        for(Table tb: tables) {\r\n            if(Objects.equals(tb.restaurantName, restaurantName) && Objects.equals(tb.tableNumber, tableNumber)) {\r\n                return tb;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public User findUserByUserName(String userName) {\r\n        for(User user: users) {\r\n            if(Objects.equals(user.username, userName)) {\r\n                return user;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public ArrayList<Table> findTablesByRestaurantName(String restaurantName) {\r\n        ArrayList<Table> wantedTables = new ArrayList<>();\r\n        for(Table tb: tables) {\r\n            if(Objects.equals(tb.restaurantName, restaurantName)) {\r\n                wantedTables.add(tb);\r\n            }\r\n        }\r\n        return wantedTables;\r\n    }\r\n\r\n    public void CommandHandlerCaller() throws JsonProcessingException {\r\n        try{\r\n            User user = new User();\r\n            user.address = new Address();\r\n            user.responseHandler = new ResponseHandler();\r\n            String returnedData;\r\n            Restourant relatedRestaurant;\r\n            User relatedUser;\r\n\r\n            switch (this.command){\r\n                case \"addUser\":\r\n                    user.addUserHandler(this.jsonString);\r\n                    if(userAlreadyExists(user)) {\r\n                        user.handleRepeatedUser();\r\n                    }\r\n                    if (user.responseHandler.responseStatus) {\r\n                        users.add(user);\r\n                    }\r\n\r\n                    this.responseHandler = user.responseHandler;\r\n\r\n                    break;\r\n                case \"addRestaurant\":\r\n                    Restourant restourant = new Restourant();\r\n                    restourant.address = new Address();\r\n                    restourant.responseHandler = new ResponseHandler();\r\n                    restourant.addRestaurantHandler(this.jsonString);\r\n\r\n                    if (!restaurantManagerUsernameExists(restourant.managerUsername)) {\r\n                        restourant.handleNoneExistingUsername();\r\n                    }\r\n\r\n                    if(!restaurantManagerRoleIsCorrect(restourant.managerUsername)) {\r\n                        restourant.handleIncorrectManagerRole();\r\n                    }\r\n\r\n                    if(restaurantNameAlreadyExists(restourant.name)) {\r\n                        restourant.handleRepeatedRestaurantName();\r\n                    }\r\n\r\n                    if (restourant.responseHandler.responseStatus) {\r\n                        restaurants.add(restourant);\r\n                        System.out.println(restaurants.size());\r\n                    }\r\n\r\n                    this.responseHandler = restourant.responseHandler;\r\n                    break;\r\n\r\n                case \"addTable\":\r\n                    Table table = new Table(this.jsonString);\r\n                    relatedRestaurant = findRestaurantByName(table.restaurantName);\r\n                    relatedUser = findUserByUserName(table.managerUsername);\r\n                    if (relatedUser == null){\r\n                        throw new Exception(\"Manager username not found.\");\r\n                    } else if (relatedUser.role == User.CLIENT_ROLE) {\r\n                        throw new Exception(\"This user is not allowed to add a table.\");\r\n                    }\r\n                    if (relatedRestaurant == null){\r\n                        throw new Exception(\"Restaurant name not found.\");\r\n                    }\r\n                    if (findTableByRestaurantNameAndTableNumber(table.restaurantName, table.tableNumber) != null){\r\n                        throw new Exception(\"Table number already exists.\");\r\n                    }\r\n\r\n                    tables.add(table);\r\n                    returnedData = \"Table added successfully\";\r\n                    this.responseHandler = new ResponseHandler(true, returnedData);\r\n                    break;\r\n\r\n                case \"reserveTable\":\r\n                    Reservation reservation = new Reservation(this.jsonString);\r\n                    relatedRestaurant = findRestaurantByName(reservation.restaurantName);\r\n                    relatedUser = findUserByUserName(reservation.username);\r\n                    if (relatedUser == null){\r\n                        throw new Exception(\"Username not found.\");\r\n                    } else if (relatedUser.role == User.MANAGER_ROLE) {\r\n                        throw new Exception(\"This user is not allowed to reserve a table.\");\r\n                    }\r\n                    if (relatedRestaurant == null){\r\n                        throw new Exception(\"Restaurant name not found.\");\r\n                    }\r\n                    if (findTableByRestaurantNameAndTableNumber(reservation.restaurantName, reservation.tableNumber) == null){\r\n                        throw new Exception(\"Table number already exists.\");\r\n                    }\r\n\r\n                    reservations.add(reservation);\r\n                    returnedData = String.format(\"{“reservationNumber”: %d}\", reservation.reservationNumber);\r\n                    this.responseHandler = new ResponseHandler(true, returnedData);\r\n                    break;\r\n                default:\r\n            }\r\n\r\n        }catch (Exception error){\r\n            this.responseHandler = new ResponseHandler(false, error.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    public void mainHandler() throws JsonProcessingException {\r\n        Scanner scanner = new Scanner(System.in);\r\n        String inputString;\r\n        while (!(inputString =scanner.nextLine()).equals(\"stop\")) {\r\n            System.out.println(\"How can I help you baby?\");\r\n            parseCommand(inputString);\r\n            CommandHandlerCaller();\r\n            System.out.println(this.responseHandler.marshalResponse(this.responseHandler));\r\n        }\r\n    }\r\n}\r\n\r\n//addUser {\"role\":\"manager\",\"username\":\"lisa\",\"password\":\"John Doe\",\"email\":\"jooe@example.com\", \"address\":{\"city\":\"milan\", \"country\":\"italy\"}}\r\n//addRestaurant {\"name\":\"wwe\", \"description\":\"d\", \"type\":\"a\", \"managerUsername\":\"lisa\", \"startTime\":\"11:00\", \"endTime\":\"12:0\", \"address\":{\"city\":\"c\", \"country\":\"i\", \"street\":\"k\"}}\r\n\r\n//addUser {\"role\":\"client\",\"username\":\"aa\",\"password\":\"John Doe\",\"email\":\"john.doe@example.com\", \"address\":{\"city\":\"milan\", \"country\":\"italy\"}}\r\n//addRestaurant {\"name\":\"wwe\", \"description\":\"d\", \"type\":\"a\", \"managerUsername\":\"aa\", \"startTime\":\"11:00\", \"endTime\":\"12:0\", \"address\":{\"city\":\"c\", \"country\":\"i\", \"street\":\"k\"}}\r\n//addRestaurant {\"name\":\"w**we\", \"description\":\"d\", \"type\":\"\", \"managerUsername\":\"eunhoo\", \"startTime\":\"11:00\", \"endTime\":\"12:11\", \"address\":{\"city\":\"\", \"country\":\"i\", \"street\":\"k\"}}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/mizdooni/CommandHandler.java b/src/main/java/mizdooni/CommandHandler.java
--- a/src/main/java/mizdooni/CommandHandler.java	(revision 4105f00a4252f4d583717b1240a241f93801fa6f)
+++ b/src/main/java/mizdooni/CommandHandler.java	(date 1708898211290)
@@ -117,6 +117,7 @@
             String returnedData;
             Restourant relatedRestaurant;
             User relatedUser;
+            Table relatedTable;
 
             switch (this.command){
                 case "addUser":
@@ -182,6 +183,7 @@
                     Reservation reservation = new Reservation(this.jsonString);
                     relatedRestaurant = findRestaurantByName(reservation.restaurantName);
                     relatedUser = findUserByUserName(reservation.username);
+                    relatedTable = findTableByRestaurantNameAndTableNumber(reservation.restaurantName, reservation.tableNumber);
                     if (relatedUser == null){
                         throw new Exception("Username not found.");
                     } else if (relatedUser.role == User.MANAGER_ROLE) {
@@ -189,9 +191,12 @@
                     }
                     if (relatedRestaurant == null){
                         throw new Exception("Restaurant name not found.");
-                    }
-                    if (findTableByRestaurantNameAndTableNumber(reservation.restaurantName, reservation.tableNumber) == null){
-                        throw new Exception("Table number already exists.");
+                    } else if (relatedTable == null){
+                        throw new Exception("Table number not found.");
+                    } else if (relatedTable.hasDateTimeConflict(reservation)) {
+                        throw new Exception("This table already reserved");
+                    } else if (!relatedRestaurant.isWorkingAt(reservation.datetime)){
+                        throw new Exception("Restaurant doesn't work at this DateTime");
                     }
 
                     reservations.add(reservation);
Index: src/main/java/mizdooni/Reservation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package mizdooni;\r\n\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\n\r\nimport java.time.LocalDate;\r\nimport java.time.LocalDateTime;\r\nimport java.time.LocalTime;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.Locale;\r\n\r\n//reserveReservation {“username”: “user1”, “restaurantName”: “restaurant1”, “reservationNumber”: 1,\r\n//        “datetime”: “2024-02-14 21:00”}\r\npublic class Reservation {\r\n    public int reservationNumber;\r\n    public String username;\r\n\r\n    public String restaurantName;\r\n\r\n    public String tableNumber;\r\n    \r\n    public String datetime;\r\n\r\n    private static int counter;\r\n\r\n    public Reservation(String jsonString) throws Exception {\r\n        counter += 1;\r\n        ObjectMapper om = new ObjectMapper();\r\n        Reservation reservation  = om.readValue(jsonString, Reservation.class);\r\n        username = reservation.username;\r\n        restaurantName = reservation.restaurantName;\r\n        tableNumber = reservation.tableNumber;\r\n        checkOutdatedDateTimes(reservation.datetime);\r\n        checkDateTimeFormat(reservation.datetime);\r\n        reservationNumber = counter;\r\n    }\r\n//    public Reservation(){}\r\n////    public static void main(String[] args){\r\n////        Reservation res = new Reservation();\r\n////        res.datetime = \"2024-02-14 1:00\";\r\n////        try{\r\n////        res.checkOutdatedDateTimes(\"2024-02-26 01:00\");\r\n////        }catch (Exception error){\r\n////            System.out.println(error.getMessage());\r\n////        }\r\n//    }\r\n    private void checkOutdatedDateTimes(String datetime) throws Exception {\r\n        String[] dt= datetime.split(\" \");\r\n        if(LocalDate.now().isAfter(LocalDate.parse(dt[0])))\r\n            throw new Exception(\"Date expired!\");\r\n        if(LocalDate.now().isEqual(LocalDate.parse(dt[0])) && LocalTime.now().isAfter(LocalTime.parse(dt[1])))\r\n            throw new Exception(\"Time expired!\");\r\n    }\r\n\r\n    public void checkDateTimeFormat(String datetime) throws Exception {\r\n        if(datetime.matches(\"\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d \\\\d\\\\d:00\")){\r\n            this.datetime = datetime;\r\n        }else throw new Exception(\"DateTime format in not correct\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/mizdooni/Reservation.java b/src/main/java/mizdooni/Reservation.java
--- a/src/main/java/mizdooni/Reservation.java	(revision 4105f00a4252f4d583717b1240a241f93801fa6f)
+++ b/src/main/java/mizdooni/Reservation.java	(date 1708898211300)
@@ -35,15 +35,17 @@
         checkDateTimeFormat(reservation.datetime);
         reservationNumber = counter;
     }
-//    public Reservation(){}
-////    public static void main(String[] args){
-////        Reservation res = new Reservation();
-////        res.datetime = "2024-02-14 1:00";
-////        try{
+    public Reservation(){}
+//    public static void main(String[] args){
+//        Reservation res = new Reservation();
+//        res.datetime = "2024-02-14 1:00";
+//        try{
+//            LocalDateTime lt = LocalDateTime.parse("2024-02-26t01:00");
+//            System.out.println(lt.toLocalDate());
 ////        res.checkOutdatedDateTimes("2024-02-26 01:00");
-////        }catch (Exception error){
-////            System.out.println(error.getMessage());
-////        }
+//        }catch (Exception error){
+//            System.out.println(error.getMessage());
+//        }
 //    }
     private void checkOutdatedDateTimes(String datetime) throws Exception {
         String[] dt= datetime.split(" ");
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"a1100196-ce9e-4911-a66b-ae9c43c85a45\" name=\"Changes\" comment=\"feat: check reservations dateTime conflict\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/mizdooni/CommandHandler.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/mizdooni/CommandHandler.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/mizdooni/Reservation.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/mizdooni/Reservation.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/mizdooni/Restourant.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/mizdooni/Restourant.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2cdSwzF4gYvQSJxD8w4kWEIuQzU\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.AddressTest.isCityValidReturnsFalseForEmptyCity.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.AddressTest.isCityValidReturnsTrueForValidCity.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.AddressTest.isCountryValidReturnsFalseForEmptyCountry.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.AddressTest.isCountryValidReturnsTrueForValidCountry.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.AddressTest.setCityDoesNotSetWhenInputIsEmpty.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.AddressTest.setCityDoestSetWhenInputIsNotEmpty.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.CommandHandlerTest.Test_parseCommand.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.CommandHandlerTest.parseCommandParsesCommandAndJsonBody.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.CommandHandlerTest.searchRestaurantByNameReturnsCorrectResponseForExistingRestaurant.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.CommandHandlerTest.searchRestaurantByNameReturnsCorrectResponseForNoneExistingRestaurant.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.ResponseHandlerTest.marshalResponseHandler.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RestaurantTest.addRestaurantResponseGeneratorGeneratesResponseForInvalidAddress.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RestaurantTest.addRestaurantResponseGeneratorGeneratesResponseForInvalidDescription.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RestaurantTest.addRestaurantResponseGeneratorGeneratesResponseForInvalidManagerUsername.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RestaurantTest.addRestaurantResponseGeneratorGeneratesResponseForInvalidTime.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RestaurantTest.addRestaurantResponseGeneratorGeneratesSuccessfulResponse.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RestaurantTest.handleIncorrectManagerRoleUpdatesResponseHandler.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RestaurantTest.handleNoneExistingUsernameFillsResponseHandler (1).executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RestaurantTest.handleNoneExistingUsernameFillsResponseHandler.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RestaurantTest.handleNoneExistingUsernameUpdatesResponseHandler.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RestaurantTest.isTimeValidReturnsFalseForValidTime.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RestaurantTest.isTimeValidReturnsTrueForValidTime.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RestaurantTest.marshalRestaurant.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RestaurantTest.marshalRestaurantJsonString.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.RestaurantTest.parseDate.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.UserTest.addUserResponseGeneratorTestForInvalidUserRole.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.UserTest.addUserResponseGeneratorTestForInvalidUsername.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.UserTest.addUserResponseGeneratorTestForValidUsername.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.UserTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.UserTest.isEmailValidDetectsValidEmails.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.UserTest.isEmailValidReturnsFalseForValidEmails.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.UserTest.isPasswordValidReturnsFalseForEmptyPassword.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.UserTest.isRoleValidReturnsFalseForInvalidRoles (1).executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.UserTest.isRoleValidReturnsFalseForInvalidRoles.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.UserTest.isRoleValidReturnsTrueForValidRoles.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.UserTest.unmarshalUserIntoObject.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.UserTest.userSetRoleDoesNotSetsInValidRoles.executor&quot;: &quot;Run&quot;,\r\n    &quot;JUnit.UserTest.userSetRoleSetsValidRoles.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.project.maven.repository.indices&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"mizdooni\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Reservation\">\r\n    <configuration name=\"Reservation\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"mizdooni.Reservation\" />\r\n      <module name=\"gorgeousIE1\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"mizdooni.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CommandHandlerTest.searchRestaurantByNameReturnsCorrectResponseForExistingRestaurant\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"gorgeousIE1\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"CommandHandlerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"searchRestaurantByNameReturnsCorrectResponseForExistingRestaurant\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CommandHandlerTest.searchRestaurantByNameReturnsCorrectResponseForNoneExistingRestaurant\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"gorgeousIE1\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"CommandHandlerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"searchRestaurantByNameReturnsCorrectResponseForNoneExistingRestaurant\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"RestaurantTest.marshalRestaurant\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"gorgeousIE1\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"RestaurantTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"marshalRestaurant\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"RestaurantTest.marshalRestaurantJsonString\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"gorgeousIE1\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"RestaurantTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"marshalRestaurantJsonString\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Reservation\" />\r\n        <item itemvalue=\"JUnit.CommandHandlerTest.searchRestaurantByNameReturnsCorrectResponseForExistingRestaurant\" />\r\n        <item itemvalue=\"JUnit.CommandHandlerTest.searchRestaurantByNameReturnsCorrectResponseForNoneExistingRestaurant\" />\r\n        <item itemvalue=\"JUnit.RestaurantTest.marshalRestaurantJsonString\" />\r\n        <item itemvalue=\"JUnit.RestaurantTest.marshalRestaurant\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"a1100196-ce9e-4911-a66b-ae9c43c85a45\" name=\"Changes\" comment=\"\" />\r\n      <created>1708440210954</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1708440210954</updated>\r\n      <workItem from=\"1708440212055\" duration=\"6614000\" />\r\n      <workItem from=\"1708497952742\" duration=\"3329000\" />\r\n      <workItem from=\"1708517559033\" duration=\"10398000\" />\r\n      <workItem from=\"1708582415516\" duration=\"16379000\" />\r\n      <workItem from=\"1708643661972\" duration=\"4663000\" />\r\n      <workItem from=\"1708667906498\" duration=\"1158000\" />\r\n      <workItem from=\"1708674367622\" duration=\"3686000\" />\r\n      <workItem from=\"1708693712619\" duration=\"7665000\" />\r\n      <workItem from=\"1708737490751\" duration=\"9086000\" />\r\n      <workItem from=\"1708753030759\" duration=\"8591000\" />\r\n      <workItem from=\"1708784755283\" duration=\"219000\" />\r\n      <workItem from=\"1708799977937\" duration=\"5507000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"feat !: project was created&#10;Breaking change: maven dependencies were specified\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708745443794</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708745443794</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"feat : User class and attributes were created and defined\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708745534198</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708745534198</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"feat : User validators were creted\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708745596989</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708745596989</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"feat : User validators' unit tests were written&#10;Breaking Change: A new Test suite was created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708745705592</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708745705592</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"feat : Address class and test was written &#10;Breaking Change: All validators were specified and tested\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708745793625</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708745793625</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"feat : Command Handler class was made&#10;Breaking Change: Program's main loop was specified\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708745941482</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708745941482</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"feat: Response Handler class was made&#10;Breaking Change: Commands are able to be parsed now\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708746109132</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708746109132</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"feat: Command Caller switch case was implemented\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708746221332</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708746221332</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"feat: unmarshaling tinto userobject and response generation was added to user class\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708746472505</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708746472505</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"feat: unmarshaling tinto userobject and response generation unit tests were added to user test suite\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708746556976</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708746556976</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"feat: addUser case was added to handler\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708757616831</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708757616831</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"feat: commandHandler parse command test was created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708757663663</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708757663663</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"feat: Handle repeated user method was created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708757812143</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708757812143</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"fix: User response generator was improved to detect repeated users\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708757843599</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708757843599</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"fix: Restaurant class attributes and validators were created\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708758028098</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708758028098</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"feat: AddRestaurant command was implemented\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708763774207</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708763774207</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"fix: Main handler is called in main.java\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708763801310</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708763801311</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"fix: restaurant unit tests were added\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708765704599</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708765704599</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"fix: restaurant response generator method was improved\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708765732702</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708765732702</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"fix: small refactorings were done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708766283513</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708766283513</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"fix : add stop condition for while loop\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708806771285</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708806771285</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"feat : addTable added\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708808443562</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708808443562</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"fix : try catch statement added\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708809762205</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708809762205</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"feat: add Reservation object\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708813265134</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708813265134</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"fix: Reservation class upgraded\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708815293806</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708815293806</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"feat: add reserveTable handler\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708815445412</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708815445412</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"fix: dateTime format added to table object\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708815538976</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708815538976</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"feat: check reservations dateTime conflict\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708838616135</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708838616135</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"29\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"feat : User validators' unit tests were written&#10;Breaking Change: A new Test suite was created\" />\r\n    <MESSAGE value=\"feat : Address class and test was written &#10;Breaking Change: All validators were specified and tested\" />\r\n    <MESSAGE value=\"feat : Command Handler class was made&#10;Breaking Change: Program's main loop was specified\" />\r\n    <MESSAGE value=\"feat: Response Handler class was made&#10;Breaking Change: Commands are able to be parsed now\" />\r\n    <MESSAGE value=\"feat: Command Caller switch case was implemented\" />\r\n    <MESSAGE value=\"feat: unmarshaling tinto userobject and response generation was added to user class\" />\r\n    <MESSAGE value=\"feat: unmarshaling tinto userobject and response generation unit tests were added to user test suite\" />\r\n    <MESSAGE value=\"feat: addUser case was added to handler\" />\r\n    <MESSAGE value=\"feat: commandHandler parse command test was created\" />\r\n    <MESSAGE value=\"feat: Handle repeated user method was created\" />\r\n    <MESSAGE value=\"fix: User response generator was improved to detect repeated users\" />\r\n    <MESSAGE value=\"fix: Restaurant class attributes and validators were created\" />\r\n    <MESSAGE value=\"feat: AddRestaurant command was implemented\" />\r\n    <MESSAGE value=\"fix: Main handler is called in main.java\" />\r\n    <MESSAGE value=\"fix: restaurant unit tests were added\" />\r\n    <MESSAGE value=\"fix: restaurant response generator method was improved\" />\r\n    <MESSAGE value=\"fix: small refactorings were done\" />\r\n    <MESSAGE value=\"fix : add stop condition for while loop\" />\r\n    <MESSAGE value=\"feat : addTable added\" />\r\n    <MESSAGE value=\"fix : try catch statement added\" />\r\n    <MESSAGE value=\"feat: add Reservation object\" />\r\n    <MESSAGE value=\"fix: Reservation class upgraded\" />\r\n    <MESSAGE value=\"feat: add reserveTable handler\" />\r\n    <MESSAGE value=\"fix: dateTime format added to table object\" />\r\n    <MESSAGE value=\"feat: check reservations dateTime conflict\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"feat: check reservations dateTime conflict\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 4105f00a4252f4d583717b1240a241f93801fa6f)
+++ b/.idea/workspace.xml	(date 1708898211709)
@@ -4,7 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="a1100196-ce9e-4911-a66b-ae9c43c85a45" name="Changes" comment="feat: check reservations dateTime conflict">
+    <list default="true" id="a1100196-ce9e-4911-a66b-ae9c43c85a45" name="Changes" comment="feat: add checkOutdatedDateTimes method for reservation">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/mizdooni/CommandHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/mizdooni/CommandHandler.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/mizdooni/Reservation.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/mizdooni/Reservation.java" afterDir="false" />
@@ -408,14 +408,21 @@
       <option name="project" value="LOCAL" />
       <updated>1708838616135</updated>
     </task>
-    <option name="localTasksCounter" value="29" />
+    <task id="LOCAL-00029" summary="feat: add checkOutdatedDateTimes method for reservation">
+      <option name="closed" value="true" />
+      <created>1708896978900</created>
+      <option name="number" value="00029" />
+      <option name="presentableId" value="LOCAL-00029" />
+      <option name="project" value="LOCAL" />
+      <updated>1708896978900</updated>
+    </task>
+    <option name="localTasksCounter" value="30" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
   <component name="VcsManagerConfiguration">
-    <MESSAGE value="feat : User validators' unit tests were written&#10;Breaking Change: A new Test suite was created" />
     <MESSAGE value="feat : Address class and test was written &#10;Breaking Change: All validators were specified and tested" />
     <MESSAGE value="feat : Command Handler class was made&#10;Breaking Change: Program's main loop was specified" />
     <MESSAGE value="feat: Response Handler class was made&#10;Breaking Change: Commands are able to be parsed now" />
@@ -440,6 +447,7 @@
     <MESSAGE value="feat: add reserveTable handler" />
     <MESSAGE value="fix: dateTime format added to table object" />
     <MESSAGE value="feat: check reservations dateTime conflict" />
-    <option name="LAST_COMMIT_MESSAGE" value="feat: check reservations dateTime conflict" />
+    <MESSAGE value="feat: add checkOutdatedDateTimes method for reservation" />
+    <option name="LAST_COMMIT_MESSAGE" value="feat: add checkOutdatedDateTimes method for reservation" />
   </component>
 </project>
\ No newline at end of file
